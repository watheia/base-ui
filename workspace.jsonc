/**
 * this is the main configuration file of your bit workspace.
 * for full documentation, please see: https://harmony-docs.bit.dev/workspace/configurations
 **/{
  "$schema": "https://static.bit.dev/teambit/schemas/schema.json",
  /**
   * main configuration of the Bit workspace.
   **/
  "teambit.workspace/workspace": {
    /**
     * the name of the component workspace. used for development purposes.
     **/
    "name": "base-ui",
    /**
     * set the icon to be shown on the Bit server.
     **/
    "icon": "https://static.bit.dev/bit-logo.svg",
    /**
     * default directory to place a component during `bit import` and `bit create`.
     * the following placeholders are available:
     * name - component name includes namespace, e.g. 'ui/button'.
     * scopeId - full scope-id includes the owner, e.g. 'teambit.compilation'.
     * scope - scope name only, e.g. 'compilation'.
     * owner - owner name in bit.dev, e.g. 'teambit'.
     **/
    "defaultDirectory": "src/{scope}/{name}",
    /**
     * default scope for all components in workspace.
     **/
    "defaultScope": "watheia.base-ui"
  },
  /**
   * main configuration for component dependency resolution.
   **/
  "teambit.dependencies/dependency-resolver": {
    /**
     * choose the package manager for Bit to use. you can choose between 'yarn', 'pnpm'
     */
    "packageManager": "teambit.dependencies/pnpm",
    "policy": {
      "peerDependencies": {
        "@teambit/design.ui.external-link": "^0.0.344",
        "@teambit/documenter.theme.theme-compositions": "^4.1.1",
        "@teambit/documenter.ui.copy-box": "^4.1.1",
        "@teambit/eslint-config-bit-react": "^0.0.367",
        "@teambit/harmony": "^0.2.11",
        "@teambit/react.templates.themes.theme": "^0.0.4"
      }
    }
  },
  /**
   * workspace variants allow to set different subsets of configuration for components in your
   * workspace. this is extremely useful for upgrading, aligning and building components with a new
   * set of dependencies. a rule can be a directory or a component-id/namespace, in which case,
   * wrap the rule with curly brackets (e.g. `"{ui/*}": {}`)
   * see https://harmony-docs.bit.dev/aspects/variants for more info.
   **/
  "teambit.workspace/variants": {
    "*": {
      "teambit.dependencies/dependency-resolver": {},
      "teambit.pkg/pkg": {
        "packageManagerPublishArgs": [
          "--access public"
        ],
        "packageJson": {
          "name": "@watheia/{scope}.{name}",
          "private": false,
          "repository": "https://github.com/watheia/{scope}",
          "author": "Aaron R Miller <amiller@watheia.org>",
          "license": "MIT",
          "homepage": "https://watheia.org/home"
        }
      }
    },
    "src/base-ui": {
      "defaultScope": "watheia.base-ui",
      "teambit.react/react": {}
    },
    "src/demo": {
      "defaultScope": "watheia.demo",
      "watheia.envs/wa-react": {}
    },
    "src/envs": {
      "defaultScope": "watheia.envs"
    },
    "src/tools": {
      "defaultScope": "watheia.tools"
    },
    /**
       * configures components with namespaces 'entities', 'modules' and 'functions' to use the 
       * default NodeJS dev environment.
      */
    "{utils/**}, {model/**}, {functions/**}": {
      "teambit.harmony/node": {}
    },
    /**
       * configures components with namespace 'content' to use the MDX dev environment.
      */
    "{content/**}": {
      "teambit.mdx/mdx": {}
    },
    /**
       * configures components with namespaces 'envs' and 'aspects' to use the default Aspect development environment.
      */
    "{wa-react}": {
      "teambit.harmony/aspect": {}
    }
  }
}